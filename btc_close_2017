
import requests
import json
import pygal
import math

from itertools import groupby

json_url = "https://raw.githubusercontent.com/muxuezi/btc/master/btc_close_2017.json"

response = requests.get(json_url)

file_name = "btc_close_2017.json"
with open(file_name, 'w') as f:
    f.write(response.text)

with open(file_name) as f:
    btc_data = json.load(f)

dates = []
months = []
weeks = []
weekdays = []
closes = []
for btc_dict in btc_data:
    dates.append(btc_dict['date'])
    months.append(int(btc_dict['month']))
    weeks.append(int(btc_dict['week']))
    weekdays.append(btc_dict['weekday'])
    closes.append(int(float(btc_dict['close'])))

# 第一种方法
line_chart = pygal.Line(x_label_rotation=20, show_minor_x_labels=False)
line_chart.title = '收盘价'
line_chart.x_labels = dates
N = 20 # x轴坐标每个20天显示一次
line_chart.x_labels_major = dates[::N]
line_chart.add('收盘价', closes)
line_chart.render_to_file('收盘价折线图.svg')

# 第二种方法
line_chart = pygal.Line(x_label_rotation=20, show_minor_x_labels=False)
line_chart.title = '收盘价对数变换'
line_chart.x_labels = dates
N = 20  # x轴坐标每个20天显示一次
line_chart.x_labels_major = dates[::N]
closes_log = [math.log10(_) for _ in closes]  # 进行对数变换可以将非线性的趋势消除， 令整体的趋势更加接近线性增长
line_chart.add('收盘价', closes_log)
line_chart.render_to_file('收盘价对数变换.svg')

# 第三种方法
def draw_line(x_data, y_data, title, y_legend):
    xy_map = []
    for x, y in groupby(sorted(zip(x_data, y_data)), key=lambda _: _[0]):
        y_list = [v for _, v in y]
        xy_map.append([x, sum(y_list) / len(y_list)])
    x_unique, y_mean = [*zip(*xy_map)]  # 简答来说就是将x / y 拆开

    # print(xy_map)
    # print(x_unique)
    # print('*'*100)
    # print(y_mean)

    line_chart = pygal.Line()
    line_chart.title = title
    line_chart.x_labels = x_unique
    line_chart.add(y_legend, y_mean)
    line_chart.render_to_file(title + '.svg')
    return line_chart

idx_month = dates.index('2017-12-01')
line_chart_month = draw_line(months[:idx_month], closes[:idx_month], '收盘价月日均值', '月日均值')
line_chart_month

idx_week = dates.index('2017-12-11')
# print(weeks[1:idx_week])
# print('*'*100)
# print(closes[1:idx_week])
line_chart_week = draw_line(weeks[1:idx_week], closes[1:idx_week], '收盘价周日均值', '周日均值')
line_chart_week

idx_week = dates.index('2017-12-11')
wd = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
weekdays_int = [wd.index(w) + 1 for w in weekdays[1:idx_week]]
line_chart_weekday = draw_line(weekdays_int, closes[1:idx_week], '收盘价星期均值', '星期均值')
line_chart_weekday.x_labels = wd
line_chart_weekday

svg_list = ['收盘价折线图.svg', '收盘价对数变换.svg', '收盘价月日均值.svg', '收盘价周日均值.svg', '收盘价星期均值.svg']
with open('收盘价Dashboard.html', 'w', encoding='utf-8') as html_file:
    html_file.write('<html>\n<head>\n<title>收盘价Dashboard</title>\n<meta charset="utf-8">\n</head>\n<body>\n')
    for svg in svg_list:
        html_file.write('<object type="image/svg+xml" data="{0}" height=400></object>\n'.format(svg))
    html_file.write('</body>\n</html>')